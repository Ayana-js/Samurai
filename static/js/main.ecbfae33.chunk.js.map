{"version":3,"sources":["redux/dialogsReducer.js","Components/WithAuthRedirect/WithAuthRedirect.jsx","Components/Navbar/Navbar.module.css","utils/validators/object-helpers.js","redux/usersReducer.js","Components/Profile/MyPosts/Post/Post.module.css","common/Preloader/Preloader.module.css","api/api.js","Components/Login/Login.module.css","redux/authReducer.js","redux/profileReducer.js","redux/sidebarReducer.js","redux/appReducer.js","redux/reduxStore.js","Components/Navbar/Navbar.jsx","Components/Settings/Settings.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileStatusWiyhHook.jsx","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Components/Login/LoginContainer.jsx","App.js","index.js","common/FormsControls/FormsControls.js","utils/validators/validators.js","common/Preloader/Preloader.jsx","common/FormsControls/FormControl.module.css","Components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","assets/images/user.png","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageText","addMessageActionCreator","type","dialogsReducer","state","action","text","WithAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","auth","module","exports","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IS_FETCHING","users","pagesSize","totalPagesCount","currentPage","isFetching","userFollowingProcess","followSuccess","userId","unfollowSuccess","setCurrentPage","pageNumber","toggleIsFetching","followingIsFetching","requestUsers","dispatch","a","UserAPI","getUsers","response","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","followed","filter","instance","axios","create","baseURL","withCredentials","headers","get","delete","post","AuthAPI","authMe","login","email","password","rememberMe","logout","ProfileAPI","setProfile","setStatus","updateStatus","status","put","SET_AUTH_USER_DATA","SET_AUTH_USER_PROFILE","LOGIN","userProfile","setAuthUserData","payload","getAuthMe","authReducer","profile","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","setUserProfile","setUserStatus","profileReducer","newPost","newPostText","sidebarReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogPage","sideBar","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","__store__","Navbar","className","s","nav","item","activeClassName","activeLink","Settings","News","Music","Post","count","alt","src","userPhoto","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","MyPosts","postsElements","p","postsBlock","values","addPost","MyPostsContainer","addPostActionCreator","ProfileStatusWiyhHook","useState","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","value","onChange","e","currentTarget","ProfileInfo","descriptionInfo","photos","large","Profilephoto","photo","profileName","fullName","aboutMe","contacts","facebook","lookingForAjob","lookingForAJobDescription","Preloader","Profile","ProfileContainer","match","params","authorizedUserId","getProfile","getStatus","withRouter","Header","header","authName","onClick","HeaderContainer","LoginReduxForm","error","Input","style","formSummaryError","console","log","length","stopSubmit","_error","DialogsContainer","lazy","UsersContainer","App","initialize","fallback","path","render","promise","Promise","all","then","ReactDOM","document","getElementById","FormControl","input","meta","touched","child","hasError","styles","formControl","children","restProps","maxLength","preloader"],"mappings":"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","file":"static/js/main.ecbfae33.chunk.js","sourcesContent":["const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Ayana'},\r\n        {id: 2, name: 'Tom'},\r\n        {id: 3, name: 'Sam'},\r\n        {id: 4, name: 'Jhonny'},\r\n        {id: 5, name: 'Jason'},\r\n        {id: 6, name: 'Chris'},\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: \"Hi, I'm Ayana\"},\r\n        {id: 2, message: \"Hi, how are you?\"},\r\n        {id: 3, message: \"How is it going?\"},\r\n        {id: 4, message: \"Hi, I use new Social Network\"},\r\n        {id: 5, message: \" I'm boring\"},\r\n        {id: 6, message: \"What are you doing?\"},\r\n    ],\r\n\r\n    newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: \r\n        let text = action.newMessageText\r\n            return {                \r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [...state.messages, {id: 7, message: text} ]\r\n            }\r\n        default:\r\n            return state\r\n        \r\n    }  \r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText) => ({\r\n    type: ADD_MESSAGE, newMessageText\r\n})\r\n\r\nexport default dialogsReducer","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport let WithAuthRedirect = (Component) => {\r\n    let mapStateToProps = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/> \r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__j1JES\",\"item\":\"Navbar_item__1jvus\",\"activeLink\":\"Navbar_activeLink__2vAeT\"};","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import { UserAPI } from \"../api/api\"\r\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW ='UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst FOLLOWING_IS_FETCHING = 'FOLLOWING_IS_FETCHING'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pagesSize: 10,\r\n    totalPagesCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    userFollowingProcess: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {    \r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            } \r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n\r\n            }  \r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalPagesCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case FOLLOWING_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                userFollowingProcess: action.isFetching\r\n                ? [...state.userFollowingProcess, action.userId] \r\n                : state.userFollowingProcess.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users })\r\nexport const setCurrentPage = (pageNumber) => ({\r\n    type: SET_CURRENT_PAGE, pageNumber })\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT, totalCount })\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const followingIsFetching = (isFetching, userId) => ({\r\n    type: FOLLOWING_IS_FETCHING, isFetching, userId })\r\n\r\nexport const requestUsers = ( pagesSize, currentPage) => async (dispatch) => {\r\n        dispatch (toggleIsFetching(true))\r\n        dispatch (setCurrentPage(currentPage))\r\n        let response = await UserAPI.getUsers(pagesSize, currentPage)\r\n            dispatch (toggleIsFetching(false))\r\n            dispatch (setUsers(response.data.items))\r\n            dispatch (setTotalUsersCount(response.data.totalCount))\r\n    }\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n    dispatch (followingIsFetching(true, id))\r\n    let response = await apiMethod(id)\r\n      if (response.data.resultCode === 0) {\r\n        dispatch (actionCreator(id))\r\n        }\r\n        dispatch (followingIsFetching(false, id))\r\n}\r\n\r\nexport const follow = ( id ) => async (dispatch) => {\r\n    let apiMethod =  UserAPI.follow.bind(UserAPI)\r\n    let actionCreator = followSuccess\r\n    \r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n}   \r\n\r\nexport const unfollow = ( id ) => async (dispatch) => {\r\n    let apiMethod =  UserAPI.follow.bind(UserAPI)\r\n    let actionCreator = unfollowSuccess\r\n      \r\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreator)\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Af7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__RuaRU\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '6bab184b-fc5c-4627-97a4-b57a94d387fd',\r\n    }\r\n})\r\n\r\nexport const UserAPI = {\r\n    getUsers (pagesSize, currentPage) {\r\n        return instance.get(`users?count=${pagesSize}&page=${currentPage}`)\r\n    },\r\n    unfollow (id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },    \r\n    follow (id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    authMe () {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    setProfile (userId) {\r\n        return instance.get('profile/' + userId)\r\n    },\r\n\r\n    setStatus (userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n\r\n    updateStatus (status) {\r\n        return instance.put('profile/status', {status})\r\n    }\r\n}   \r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__-WS3G\",\"input\":\"Login_input__2LZhP\",\"error\":\"Login_error__U6wlQ\",\"button\":\"Login_button__2nzZ-\"};","import { stopSubmit } from \"redux-form\"\r\nimport { AuthAPI } from \"../api/api\"\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\nconst SET_AUTH_USER_PROFILE = 'SET_AUTH_USER_PROFILE'\r\nconst LOGIN = 'LOGIN'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    userProfile: null,\r\n    password: null,\r\n    rememberMe: false\r\n}\r\n\r\nconst authReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case SET_AUTH_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                rememberMe: action.rememberMe,\r\n                password: action.password\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA, payload: {id, email, login, isAuth} })\r\nexport const setAuthUserProfile = (profile) => ({ type: SET_AUTH_USER_PROFILE, profile })\r\nexport const loginMe = ({login, password, rememberMe}) => ({\r\n    type: LOGIN, login, password, rememberMe\r\n})  \r\n\r\nexport const getAuthMe = () => async (dispatch) => {\r\n        let response = await AuthAPI.authMe()\r\n          if (response.data.resultCode === 0) {\r\n             let {id, email, login} = response.data.data\r\n             dispatch (setAuthUserData(id,email,login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n        let response = await AuthAPI.login(email, password, rememberMe)\r\n        console.log(response);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthMe())\r\n            }\r\n            else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0]: \"Some error\"\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n    }\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await AuthAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\nexport default authReducer","import { ProfileAPI } from \"../api/api\"\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, how are you?\", likesCount: 17 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 15 },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.setProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.setStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    \r\n    return state\r\n}\r\nexport default sidebarReducer","import { getAuthMe } from \"./authReducer\"\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initialize = () => {\r\n    return (dispatch) => { \r\n        let promise = dispatch(getAuthMe())\r\n         Promise.all([promise])\r\n            .then(() => {\r\n                 dispatch(initializedSuccess())\r\n        })\r\n}}\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers =  combineReducers ({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    sideBar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)))\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n    <div className={s.item}> \r\n     <NavLink to=\"/profile\" className={s.item} activeClassName={s.activeLink}> Profile </NavLink>\r\n    </div>\r\n    <div className={s.item}> \r\n    <NavLink to=\"/dialogs\" className={s.item} activeClassName={s.activeLink}> Messages </NavLink>\r\n    </div>\r\n    <div className={s.item}> \r\n    <NavLink to=\"/users\" className={s.item} activeClassName={s.activeLink}> Users </NavLink>\r\n    </div>\r\n    <div className={s.item}> \r\n    <NavLink to=\"/music\" className={s.item} activeClassName={s.activeLink}> Music </NavLink>    \r\n    </div>\r\n    <div className={s.item}> \r\n    <NavLink to=\"/settings\" className={s.item} activeClassName={s.activeLink}> Settings </NavLink>    \r\n    </div>\r\n    <div className={s.item}> \r\n    <NavLink to=\"/login\" className={s.item} activeClassName={s.activeLink}> Login </NavLink>    \r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport userPhoto from '../../../../assets/images/user.png'\r\n\r\nconst Post = ({count, message}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt=\"\" src={userPhoto} />\r\n            {message}\r\n            <div>\r\n                <span>like</span>\r\n                {count}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n    <Field placeholder={\"Enter your message\"} name={\"newPostText\"} component={Textarea} validate={[required, maxLength10 ]} /> \r\n    <div>\r\n    <button> Add post</button>  \r\n    <button> Remove</button>\r\n    </div>\r\n</form>\r\n    )}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'posts'}) (NewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} count={p.likesCount} />)\r\n\r\n    let onAddPost = (values) => {\r\n       props.addPost(values.newPostText)\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3> My posts </h3>\r\n        <div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            { postsElements }\r\n        </div>\r\n        <NewPostReduxForm onSubmit={onAddPost}/>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts; ","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapStateToDispatch = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))  \r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapStateToDispatch)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode () {\r\n        this.setState ({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode () {\r\n        this.setState ({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState ({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n         if ( prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n         }\r\n    }\r\n\r\n    render () {\r\n    return (<div>\r\n        {!this.state.editMode && \r\n            <div>\r\n            <span onDoubleClick={this.activateEditMode.bind(this)}>  {!this.props.status? \"_____\": this.props.status} </span>\r\n            </div>\r\n        }\r\n        {this.state.editMode &&\r\n            <div>\r\n            <input autoFocus={true} \r\n                   onBlur={this.deactivateEditMode.bind(this)}\r\n                   value={this.state.status}\r\n                   onChange={this.onStatusChange} />\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n    }\r\n} \r\n\r\nexport default ProfileStatus","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWiyhHook = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={() => setEditMode(true)}>  {!props.status ? \"_____\" : props.status} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                        onBlur={deactiveEditMode}\r\n                        value={status}\r\n                        onChange={onStatusChange} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWiyhHook;","import React from \"react\";\r\nimport Preloader from \"../../../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Profilephoto from '../../../../assets/images/user.png'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWiyhHook from \"./ProfileStatusWiyhHook\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (<div>\r\n        <div className={s.descriptionInfo}>\r\n            <img alt=\"\" src={profile.photos.large != null ? profile.photos.large : Profilephoto } className={s.photo} />\r\n           <h2 className={s.profileName}> {profile.fullName} </h2>\r\n           <div> <ProfileStatusWiyhHook status={status} updateStatus={updateStatus}/> </div>\r\n            {profile.aboutMe} \r\n            {profile.contacts.facebook} \r\n            {profile.lookingForAjob}\r\n            {profile.lookingForAJobDescription}\r\n        </div>\r\n    </div>\r\n    )\r\n} \r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\n// import s from './Profile.module.css'\r\n\r\n// const p = new Promise((resolve, reject) => {\r\n//     console.log('setTimeOut started');\r\n//     setTimeout(() => {\r\n//         console.log('setTimeOut ended');\r\n//         resolve({status: 'OK'})\r\n//     }, 2000)\r\n// })\r\n\r\n// p.then((data) => console.log(data))\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {setUserProfile, getProfile, getStatus, updateStatus} from '../../redux/profileReducer'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { WithAuthRedirect } from '../WithAuthRedirect/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {  \r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n         this.props.getProfile(userId)\r\n         this.props.getStatus(userId)\r\n    }\r\n    \r\n    render () {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\nexport default compose (connect (mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus}),\r\nwithRouter,\r\nWithAuthRedirect)\r\n(ProfileContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = ({isAuth, login, logout}) => {\r\n    return <header className={s.header}> \r\n   <img alt=\"\" src='https://d1csarkz8obe9u.cloudfront.net/posterpreviews/app-logo-design-template-5ceda3418eba54b040875a86d7e7b8ec_screen.jpg?ts=1573502884'/>\r\n   <div className={s.authName}>\r\n     {isAuth \r\n       ? <div> {login} - <button onClick={logout}>Log out</button> </div>\r\n       : <NavLink to='/login'> Login </NavLink>} \r\n   </div>\r\n  </header>\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {logout} from '../../redux/authReducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render () {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    userProfile: state.auth.userProfile\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport styles from './Login.module.css'\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Input } from \"../../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"../../common/FormsControls/FormControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return <form onSubmit={handleSubmit}>\r\n  <div>\r\n      <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required ]} />\r\n  </div>\r\n  <div>\r\n      <Field placeholder={\"Password\"} name={\"password\"} component={Input} validate={[required ]} />\r\n  </div>\r\n  <div>\r\n      <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> Remember me\r\n  </div>\r\n  {error && <div className={style.formSummaryError}>\r\n    {error}\r\n  </div>}\r\n  <div>\r\n    <button>Login</button>\r\n  </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'}) (LoginForm) \r\n\r\nconst Login = ({login, isAuth}) => {\r\n   const onSubmit = (values) => {\r\n     login(values.email, values.password, values.rememberMe)\r\n   } \r\n\r\n   if(isAuth) {\r\n      return <Redirect to={\"/profile\"} />\r\n   }\r\n\r\n   return <div>\r\n     <h1> Login </h1>\r\n     <LoginReduxForm onSubmit={onSubmit}/>\r\n   </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login)\r\n\r\n// const LoginFormik = (props) => {\r\n//     const validationSchema = yup.object().shape({\r\n//         name: yup.string().typeError('Name should be a string').required('Mandatory'),\r\n//         secondname: yup.string().typeError('Name should be a string').required('Mandatory'),\r\n//         password: yup.string().typeError('Name should be a string').required('Mandatory'),\r\n//         confirmPassWord: yup.string().oneOf([yup.ref('password')], 'Passwords are different').required('Mandatory'),\r\n//         email: yup.string().email('Enter a valid email').required('Mandatory'),\r\n//         confirmEmail:  yup.string().email('Enter a valid email').oneOf([yup.ref('email')], 'Emails are different').required('Mandatory')\r\n//       })\r\n      \r\n//       return (\r\n//         <div className={styles.wrapper}>        \r\n//           <Formik \r\n//             initialValues = {{\r\n//               name: '',\r\n//               secondname: '',\r\n//               password: '',\r\n//               confirmPassWord: '',\r\n//               email: '',\r\n//               confirmEmail: ''\r\n//             }}\r\n//             validateOnBlur\r\n//             onSubmit={(values) => {console.log(values)}}\r\n//             validationSchema={validationSchema}\r\n//             >\r\n//             {({values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty}) => (\r\n//               <div>\r\n//                 <p>\r\n//                   <label htmlFor='name'>Name</label> <br/>\r\n//                   <input\r\n//                   className={styles.input}\r\n//                   name={'name'}\r\n//                   onChange={handleChange}\r\n//                   onBlur={handleBlur}\r\n//                   value={values.name}\r\n//                   />\r\n//                 </p>\r\n//                 {touched.name && errors.name && <p className={styles.error}> {errors.name} </p>}\r\n//                 <p>\r\n//                   <label htmlFor='email'>Email</label> <br/>\r\n//                   <input\r\n//                   className={styles.input}\r\n//                   type={'email'}\r\n//                   name={'email'}\r\n//                   onChange={handleChange}\r\n//                   onBlur={handleBlur}\r\n//                   value={values.email}\r\n//                   />\r\n//                 </p>\r\n//                 {touched.email && errors.email && <p className={styles.error}> {errors.email} </p>}\r\n//                 <p>\r\n//                   <label htmlFor='confirmEmail'> Confirm email</label> <br/>\r\n//                   <input\r\n//                   className='input'\r\n//                   type={'confirmEmail'}\r\n//                   name={'confirmEmail'}\r\n//                   onChange={handleChange}\r\n//                   onBlur={handleBlur}\r\n//                   value={values.confirmEmail}\r\n//                   />\r\n//                 </p>\r\n//                 {touched.confirmEmail && errors.confirmEmail && <p className={styles.error}> {errors.confirmEmail} </p>}\r\n//                 <p>\r\n//                   <label htmlFor='password'>Password</label> <br/>\r\n//                   <input\r\n//                   className={styles.input}\r\n//                   type={'password'}\r\n//                   name={'password'}\r\n//                   onChange={handleChange}\r\n//                   onBlur={handleBlur}\r\n//                   value={values.password}\r\n//                   />\r\n//                 </p>\r\n//                 {touched.password && errors.password && <p className={styles.error}> {errors.password} </p>}\r\n//                 <p>\r\n//                   <label htmlFor='confirmPassWord'> Confirm password</label> <br/>\r\n//                   <input\r\n//                   className={styles.input}\r\n//                   type={'password'}\r\n//                   name={'confirmPassWord'}\r\n//                   onChange={handleChange}\r\n//                   onBlur={handleBlur}\r\n//                   value={values.confirmPassWord}\r\n//                   />\r\n//                 </p>\r\n//                 {touched.confirmPassWord && errors.confirmPassWord && <p className={styles.error}> {errors.confirmPassWord} </p>}\r\n//                 <input type={'checkbox'} /> Remember me\r\n//                 <div>\r\n//                 <button\r\n//                 className={styles.button}\r\n//                 disabled={!isValid && !dirty}\r\n//                 onClick={handleSubmit}\r\n//                 type={'submit'}\r\n//                 > Submit </button>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </Formik>\r\n//         </div>\r\n//       );\r\n// }\r\n\r\n","import React, { useEffect } from 'react';\r\nimport Login from './Login';\r\nimport { login } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LoginContainer = (props) => {\r\n    return <Login login={props.login}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    rememberMe: state.auth.rememberMe,\r\n    email: state.auth.email,\r\n    password: state.auth.password\r\n})\r\n\r\n// let mapStateToDispatch = (dispatch) => {\r\n//     return {\r\n//         login: (newPostText) => {\r\n//             dispatch(addPostActionCreator(newPostText))  \r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(LoginContainer);\r\n","import React, { Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Settings from './Components/Settings/Settings';\r\nimport News from './Components/News/News';\r\nimport Music from './Components/Music/Music';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\n// import DialogsContainer from './Components/Dialogs/DialogsContainer';\r\n// import UsersContainer from './Components/Users/UsersContainer';\r\nimport ProfileContainer from './Components/Profile/ProfileContainer';\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport LoginContainer from './Components/Login/LoginContainer';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initialize } from './redux/appReducer';\r\nimport Preloader from './common/Preloader/Preloader';\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initialize()\r\n  }\r\n  render() {\r\n\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n  return (\r\n    <div className='app-wrapper'>\r\n      <HeaderContainer />\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n         <Suspense fallback={<Preloader />}>\r\n        <Route path='/music' component={Music}/>\r\n        <Route path='/settings' component={Settings}/>\r\n        <Route path='/news' component={News}/>\r\n        <Route path='/dialogs' \r\n               render={ () => \r\n                <DialogsContainer /> }/>\r\n        <Route path='/profile/:userId?' \r\n               render={ () => < ProfileContainer />}/>\r\n        <Route path='/users' \r\n               render={ () => \r\n                <UsersContainer /> }/>  \r\n        <Route path='/login'\r\n               render={ () => <LoginContainer />} />\r\n           </Suspense>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n connect(mapStateToProps, {initialize})) (App);\r\n","import store from './redux/reduxStore'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n    ReactDOM.render(    \r\n        <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </ Provider>\r\n        </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\nexport default App; ","import React from 'react';\r\nimport styles from './FormControl.module.css'\r\n\r\nconst FormControl = ({input, meta : {touched, error}, child, ...props}) => {\r\n    const hasError =  touched && error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError? styles.error : '')}>\r\n            <div>\r\n                 {props.children}\r\n            </div>\r\n           {hasError && <span> Some error </span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Select = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><select {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input   = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n\r\n};\r\n\r\n","export const required = value => {\r\n    if (value) return undefined\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) =>  (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from 'react' \r\nimport styles from './Preloader.module.css'\r\n\r\nlet Preloader = () => {\r\n    return <div className={styles.preloader}> </div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2GzQn\",\"error\":\"FormControl_error__3TUp5\",\"formSummaryError\":\"FormControl_formSummaryError__1053K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionInfo\":\"ProfileInfo_descriptionInfo__1SRO9\",\"profileName\":\"ProfileInfo_profileName__2CyHb\",\"photo\":\"ProfileInfo_photo__3C4sw\"};","export default __webpack_public_path__ + \"static/media/user.43e64566.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3mtnT\",\"posts\":\"MyPosts_posts__2SR4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1-8xn\",\"authName\":\"Header_authName__2Vnbc\"};"],"sourceRoot":""}