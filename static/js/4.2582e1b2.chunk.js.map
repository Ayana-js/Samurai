{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DiologItem/DiologItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","ava","alt","src","userPhoto","to","dialogsItem","activeClassName","activeDialogItem","name","Message","message","maxLength50","maxLengthCreator","DialogsFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogs","messages","sendMessage","dialogsElements","map","d","messagesElements","m","dialogsItems","text","values","newTextMessage","compose","connect","state","dialogPage","dispatch","addMessageActionCreator","WithAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,iBAAmB,kCAAkC,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,wB,gKCc7RC,EAVI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,gCACF,qBAAKC,UAAWC,IAAEC,IAAKC,IAAI,GAAGC,IAAKC,MACpC,eAAC,IAAD,CAASC,GAAIR,EAAME,UAAWC,IAAEM,YAAaC,gBAAiBP,IAAEQ,iBAAhE,eAAqFZ,EAAMa,KAA3F,WCFOC,EANC,SAACd,GACb,OAAO,qBAAKG,UAAWC,IAAEW,QAAlB,SACFf,EAAMe,WCGTC,EAAcC,YAAiB,IAe/BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAbL,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAClB,OACI,uBAAMC,SAAUD,EAAhB,UACI,8BACI,cAACE,EAAA,EAAD,CAAOC,YAAa,qBAAsBX,KAAM,iBAAkBY,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,OAEhH,8BACI,0DAgCDa,EAxBC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAC7BC,EAAkBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMX,GAAIiC,EAAEjC,QACnEkC,EAAmBL,EAASG,KAAI,SAAAG,GAAC,OAAK,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASb,GAAImC,EAAEnC,QAM7E,OACI,sBAAKC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEkC,aAAlB,SACML,IAEN,qBAAK9B,UAAWC,IAAE2B,SAAlB,SACKK,IAEL,qBAAKjC,UAAWC,IAAEmC,KAAlB,SACA,cAACrB,EAAD,CAAkBI,SAbJ,SAACkB,GACnBR,EAAYQ,EAAOC,yBCTZC,sBAASC,aAfF,SAACC,GACnB,MAAO,CACHd,QAASc,EAAMC,WAAWf,QAC1BC,SAAUa,EAAMC,WAAWd,SAC3BU,eAAgBG,EAAMC,WAAWJ,mBAIhB,SAACK,GACtB,MAAO,CACPd,YAAa,SAACS,GACVK,EAASC,YAAwBN,SAKzCO,IADeN,CACIb","file":"static/js/4.2582e1b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__16Fz9\",\"dialogsItems\":\"Dialogs_dialogsItems__2VF3S\",\"dialogsItem\":\"Dialogs_dialogsItem__3sO7X\",\"activeDialogItem\":\"Dialogs_activeDialogItem__2u3No\",\"messages\":\"Dialogs_messages__2iVmm\",\"message\":\"Dialogs_message__3hemW\",\"ava\":\"Dialogs_ava__He340\",\"text\":\"Dialogs_text__2UCc7\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\nimport userPhoto from '../../../assets/images/user.png'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div>\r\n         <img className={s.ava} alt=\"\" src={userPhoto}/>\r\n        <NavLink to={path} className={s.dialogsItem} activeClassName={s.activeDialogItem}>  {props.name} </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DiologItem/DiologItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter your message\"} name={\"newTextMessage\"} component={Textarea} validate={[required, maxLength50]} />    \r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: 'dialogs'}) (DialogsForm)\r\n\r\nconst Dialogs = ({dialogs, messages, sendMessage}) => {\r\n    let dialogsElements = dialogs.map(d => <DialogItem name={d.name} id={d.id} />)\r\n    let messagesElements = messages.map(m  => <Message message={m.message} id={m.id} />)\r\n\r\n    const onSendMessage = (values) => {\r\n        sendMessage(values.newTextMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n               { messagesElements }\r\n            </div>\r\n            <div className={s.text}> \r\n            <DialogsFormRedux onSubmit={onSendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { addMessageActionCreator } from \"../../redux/dialogsReducer\";\r\nimport { WithAuthRedirect } from \"../WithAuthRedirect/WithAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        messages: state.dialogPage.messages,\r\n        newTextMessage: state.dialogPage.newTextMessage\r\n    }\r\n} \r\n\r\nlet mapStateToDispatch = (dispatch) => {\r\n    return {\r\n    sendMessage: (newTextMessage) => {\r\n        dispatch(addMessageActionCreator(newTextMessage))\r\n    }\r\n}}\r\n\r\nexport default compose (connect(mapStateToProps, mapStateToDispatch),\r\nWithAuthRedirect) (Dialogs)"],"sourceRoot":""}